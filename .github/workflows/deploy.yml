name: Deploy to Render

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

concurrency:
  group: render-hourly-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run client_coes.py to generate data
      run: |
        cd src/data
        python client_coes.py
        cd ../..

    - name: Verify parquet file generation
      run: |
        ls -la dataset/
        [ -f dataset/currentGen.parquet ] && echo "Parquet file generated successfully" || echo "Parquet file not found"

    - name: Upload generated data
      uses: actions/upload-artifact@v4
      with:
        name: dataset
        path: dataset/currentGen.parquet
    - name: Trigger Render deployment
      env:
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        RENDER_API_KEY:    ${{ secrets.RENDER_API_KEY }}
      run: |
        echo "ðŸš€ Triggering Render deployment for service: $RENDER_SERVICE_ID"
        resp=$(curl -s -w "\n%{http_code}" -X POST \
          "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{}')
        body=$(echo "$resp" | head -n1)
        code=$(echo "$resp" | tail -n1)
        echo "HTTP $code"
        echo "$body"
        [ "$code" -eq 201 ]