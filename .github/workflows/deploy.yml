name: Deploy to Render

on:
  push:
    branches: [test_v1.0]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run client_coes.py to generate data
      run: |
        cd src/data
        python client_coes.py
        cd ../..

    - name: Verify parquet file generation
      run: |
        ls -la dataset/
        [ -f dataset/currentGen.parquet ] && echo "Parquet file generated successfully" || echo "Parquet file not found"

    - name: Upload generated data
      uses: actions/upload-artifact@v3
      with:
        name: dataset
        path: dataset/currentGen.parquet
    - name: Deploy to Render
      env:
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        echo "ðŸš€ Triggering Render deployment for service: $RENDER_SERVICE_ID"
        
        response=$(curl -s -w "%{http_code}" -X POST \
          "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json")
        
        status_code=${response: -3}
        response_body=${response:0:${#response}-3}
        
        if [ "$status_code" -eq 201 ]; then
          echo "Deployment triggered successfully!"
          echo "Response: $response_body"
        else
          echo "Failed to trigger deployment. Status code: $status_code"
          echo "Response: $response_body"
          exit 1
        fi

    - name: Show workflow status
      run: |
        echo "ðŸŽ‰ Workflow completed successfully!"
        echo "ðŸ“Š Artifacts uploaded for debugging"